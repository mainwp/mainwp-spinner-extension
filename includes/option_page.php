<?php$sub_blog_nonce = wp_create_nonce($this->plugin_handle.'-sub-blog-ajax');$template_nonce = wp_create_nonce($this->plugin_handle.'-template-ajax');?><div class="wrap" id="mainwp-ap-option">			<div class="clearfix"></div>		<?php if ( isset($_REQUEST['message']) ): ?>		<div class="updated">			<p>			<?php				switch ( $_REQUEST['message'] )				{					case '1':						_e("Option Saved");						break;					case '3':						_e("An error occured while trying to save");						break;				}			?>			</p>		</div>	<?php endif ?>	            <?php             $error = $mess = "";            if ( $this->get_option('sp_enable') == 1 && $this->get_option('sp_error') == 1 )                   $error = __($this->get_option('sp_error_message'));             if ($this->get_option('sp_message'))                   $mess = __($this->get_option('sp_message'));            ?>            <div  id="spinner_errorbox-spin" <?php echo !empty($error) ? ' style="display: block" ' : ""; ?>><?php echo $error; ?></div>			            <div  id="spinner_infobox-spin" <?php echo !empty($mess) ? ' style="display: block" ' : ""; ?>><?php echo $mess; ?></div>	            	<form action=""   method="post" id="mainwp-option-form" enctype="multipart/form-data">                                <div class="settings spinner_ext-option-list-wrapper">                                  <div class="postbox">                                        <h3 class="hndle" id="1"><span><?php _e("General Settings") ?></span></h3>                                        <div class="inside">                                        <?php                                             $this->create_option_field('sp_enable', __("Enable an Automatic Spinner"), 'select', 1, array("No", "Yes"));                                             $this->create_option_field('sp_spinner', __("Select Spinner"), 'select', "bs" , $this->spinners);                                             $this->create_option_field('sp_spin_title', __("Auto-spin Article Title"), 'select', '0', array("No", "Yes"));                                          ?>                                        </div>                                  </div>                                  <div class="postbox">                                        <h3 class="hndle"><span><?php _e("The Best Spinner Settings") ?></span></h3>                                        <div class="inside">                                        <?php                                                                                        $this->create_option_field('bs_email_address', __("Email Address"), 'text');                                            $this->create_option_field('bs_password', __("Password"), 'password');                                            $this->create_option_field('bs_max_synonyms', __("Maximum Synonyms per Term"), 'select', 2, array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10));                                            $this->create_option_field('bs_quality', __("Replacement Quality"), 'select', 1, array(1, 2, 3), __("1 - Most Changes, 3 - Fewest Changes"));                                            $this->create_option_field('bs_exclude_words', __("Words not to be Changed"), 'textarea', '', '', __("Separate each word with comma"));                                                                                    ?>                                        <p><a href="http://thebestspinner.com/">Order The Best Spinner</a></p>                                        </div>                                  </div>                                  <div class="postbox">                                         <h3 class="hndle" id="2"><span><?php _e("Spinnerchief Settings") ?></span></h3>                                         <div class="inside">                                        <?php                                            $this->create_option_field('sc_ip_port', __("IP and Port"), 'text', 'api.spinnerchief.com:443');                                            $this->create_option_field('sc_api_key', __("Spinnerchief API Key"), 'text', '', '', '<a href="http://developer.spinnerchief.com/" target="_blank">Get Spinnerchief API Key</a>');                                            $this->create_option_field('sc_username', __("Username"), 'text');                                            $this->create_option_field('sc_password', __("Password"), 'password', '', '', '<a href="http://account.spinnerchief.com/" target="_blank">Register Spinnerchief account freely at here</a>');                                            $this->create_option_field('sc_spinfreq', __("Word spin frequency"), 'select', 4, array(1 => 1, 2 => 2 , 3 => 3, 4 => 4, 5 => 5, 6 => 6), __("1 - Every word will be spun, 3 - 1/3 of all words will be spun, etc ... "));                                                                                        $this->create_option_field('sc_wordscount', __("Words amount in {}"), 'select', 5, array(1=>1, 2 => 2, 3 => 3, 4 => 4, 5 => 5, 6 => 6, 7 =>7, 8 => 8, 9 => 9, 10 => 10));                                                                                        $this->create_option_field('sc_replace_type', __("Replace type"), 'select', 2, array(0, 1, 2, 3, 4, 5), __("0 - Replace phrase and word, 1 - Only replace phrase, 2 - Only replace word, 3 - Replace phrase first, then replace word till the article passes copyscape, 4 - Spin the article to most unique, 5 - Spin the article to most readable"));                                                                                        $this->create_option_field('sc_wordquality', __("Word quality"), 'select', 0, array(0 => 0, 1 => 1, 2 => 2, 3 => 3, 9 => 9), __("0 - use Best Thesaurus to spin, 1 - use Better Thesaurus to spin, 2 - Use Good Thesaurus to spin,  3 - Use All Thesaurus to spin, 9 - Use Everyone's favorite to spin"));                                                                                                                                    // always use original word (for respin)                                            //$this->create_option_field('sc_use_original_word', __("Use orginal word when spin"), 'select', 1 , array("No", "Yes"));                                            $this->create_option_field('sc_protect_html', __("Protect html"), 'select', 1 , array("No", "Yes"), __("No -  Not spin the words in the html tags. Yes - Spin the words in html tags. "));                                                                               $this->create_option_field('sc_use_synonyms_orderly', __("Use synonyms Orderly"), 'checkbox', '', array('1' => "Uses the thesaurus randomly to spin."), '', '', '', true);                                                                                                                                    $this->create_option_field('sc_enable_grammar_ai', __("Enable Grammar AI"), 'checkbox', '', array('1' =>__('Use grammar correction')) , '', '', '', true);                                                                                        $this->create_option_field('sc_use_pos', __("Use POS analysis"), 'checkbox', '', array('1' =>__('Use \'part of speech\' analysis')) , '', '', '', true);                                                 $this->create_option_field('sc_tag_protect', __("Tags Protect"), 'text', '', '', __("[], (), <- -> , it will protect the text between [ and ], ( and ), <- and ->."));                                                                               $this->create_option_field('sc_protect_words', __("Protect Words"), 'textarea', '', '', __("Separate each word with comma"));                                                                                                                                    ?>                                         </div>                                  </div>                                  <div class="postbox">                                          <h3 class="hndle" id="3"><span><?php _e("Chimp Rewriter Settings") ?></span></h3>                                          <div class="inside">                                        <?php                                            $this->create_option_field('cr_username', __("User's Chimp Rewriter account email"), 'text', '', '', 'Note that the user requires a Chimp Rewriter Pro subscription.');                                            $this->create_option_field('cr_api_key', __("User's API key"), 'text', '', '', 'Get one on the  <a href="http://account.akturatech.com/" target="_blank">Chimp Rewriter User Management</a> page.');                                            $this->create_option_field('cr_aid', __("Application ID"), 'text', '', '', 'Set this to a string (100 charachers or less) to identify your application to the server.');                                            $this->create_option_field('cr_quality', __("Quality"), 'select', 4, array(5 => 5, 4 => 4 , 3 => 3, 2 => 2, 1 => 'All'), __('Spin quality: 5 - Best, 4 - Better, 3 - Good, 2 - Average, 1 - All'));                                            $this->create_option_field('cr_posmatch', __("Required Part of Speech (POS) match for a spin"), 'select', 3, array(4 => 4 , 3 => 3, 2 => 2, 1 => 1, 0=> 0), __('4 - FullSpin, 3 - Full, 2 - Loose, 1 - Extremely Loose, 0 - None.'));                                            $this->create_option_field('cr_protectedterms', __("Protected terms"), 'text', '', '', __("Comma separated list of words or phrases to protect from spin i.e. 'my main keyword,my second keyword'"));                                                                                        $this->create_option_field('cr_rewrite', __("Rewrite"), 'select', 0, array(0, 1), __('If set to 1, results are returned as a rewritten article with no Spintax. Otherwise, an article with Spintax is returned. Note that with rewrite as 1, the original word will always be removed.'));                                                                                        $this->create_option_field('cr_phraseignorequality', __("Phrase ignore quality"), 'select', 0, array(0, 1), __("If set to 1, quality is ignored when finding phrase replacements for phrases. This results in a huge amount of spin, but quality can vary."));                                                                                                                                    $this->create_option_field('cr_spinwithinspin', __("Spin within spin"), 'select', 0, array(0, 1), __("1- if there is existing spin syntax in the content you send up, the API will spin any relevant content inside this syntax.  0 - the API will skip over this content and only spin outside of existing syntax."));                                                                                                                                                                                $this->create_option_field('cr_spinwithinhtml', __("Spin within html"), 'select', 0, array(0, 1),  __('Spin inside HTML tags. This includes &lt;p&gt; tags, for example if you send up "&lt;p&gt;Here is a paragraph&lt;/p&gt;", nothing would be spun unless "Spin with in html" is 1.'));                                                                                                                                                                                // comment if do not support two this params                                            $this->create_option_field('cr_applyinstantunique', __("Apply instant unique"), 'select', 0, array(0, 1), __("<strong>(Extra quota cost)</strong> Runs an instant unique pass over the article once spun. This replaces letters with characters that look like the original letter but have a different UTF8 value, passing copyscape 100% but garbling content to the search engines. It it recommended to protect keywords while using instant unique. Costs one extra query."));                                                                                                                                    $this->create_option_field('cr_fullcharset', __("Full charset"), 'select', 0, array(0, 1), __("Only used if 'Apply instant unique' = 1. This causes IU to use the full character set which has a broader range of replacements."));                                                                                                                                    $this->create_option_field('cr_spintidy', __("Spin tidy"), 'select', 0, array(0, 1), __("<strong>(Extra quota cost)</strong> Runs a spin tidy pass over the result article. This fixes any common a/an type grammar mistakes and repeated words due to phrase spinning. Generally increases the quality of the article. Costs one extra query."));                                                                                                                                    $this->create_option_field('cr_tagprotect', __("Tag protect"), 'text', '', '', __("Protects anything between any syntax you define. Separate start and end syntax with a pipe '|' and separate multiple tags with a comma ','. For example, you could protect anything in square brackets by setting tagprotect=[|]. You could also protect anything between \"begin\" and \"end\" by setting tagprotect=[|],begin|end."));                                                                                                                                    // comment if do not support nested spin                                            $this->create_option_field('cr_maxspindepth', __("Max spin depth"), 'select', 0, array(0, 1), __("Define a maximum spin level depth in returned article. If set to 1, no nested spin will appear in the spun result. This paramater only matters if rewrite is false. Set to 0 or ignore for no limit on spin depth."));                                                                                                                                    ?>                                                                                    <div class="spinner_option-list"><label>&nbsp;</label>                                              <div class="spinner_option-field">                                                                                                       <?php   echo __("To protect any piece of text, simply wrap it with ###. For example, if you had a certain paragraph or code to protect, simply send \"An intro sentence. ###My protected stuff### and the rest of the article\". Anything inside the hashes will not be spun. Then just replace '###' with an empty string.");  ?>                                              </div>                                          </div>                                         </div>                                       </div>                                                                         </div>                                 <input type="hidden" name="settings_page"   value="1" />                                          <div >                                        <div id="spinner_option-save-status"></div>                                        <div id="spinner_test-spin-status"></div>                                        <input type="hidden" name="nonce" value="<?php echo wp_create_nonce($this->plugin_handle.'-option') ?>" />                                        <input type="hidden" name="ajax_nonce" value="<?php echo wp_create_nonce($this->plugin_handle.'-option-ajax') ?>" />                                        <p class="submit"><input type="submit" value="Save Settings" class="button-primary" id="submit" name="submit">                                            <input type="button" value="Test Spin" class="button-primary" id="test_spin" name="test_spin">                                                                                        <img src="<?php echo admin_url('images/wpspin_light.gif') ?>" alt="loading" class="spin_loading" style="display: none;" />                                         </p>                                     </div>	</form></div>